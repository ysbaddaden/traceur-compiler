== Ruby bindings for the Traceur Compiler

Traceur is available at https://github.com/google/traceur-compiler

This is known to work with Traceur 0.33 up to 0.51.


=== Usage

First declare the gem in your Gemfile:

  gem "traceur-compiler", github: "ysbaddaden/traceur-compiler"

Then download Traceur (using NPM for example) and configure either the
TRACEUR_COMPILER_SOURCE_PATH environment variable, or set it directly:

  TraceurCompiler::Source.path =
    File.expand_path("../node_modules/traceur/bin/traceur.js", __FILE__)

You may then compile your ES6 JavaScript code:

  input = File.read("/path/to/file.js")

  output = TraceurCompiler.compile(input,
    filename: "file.js",
    source_map: false,
    modules: "inline"
  )


=== Usage with Ruby on Rails (Sprockets)

You must create a sprockets processor in the
<tt>config/initializers/traceur_compiler.rb</tt> file for example:

  require 'traceur-compiler'

  TraceurCompiler::Source.path =
    File.expand_path("../../../node_modules/traceur/bin/traceur.js", __FILE__)

  class TraceurProcessor < Sprockets::Processor
    def evaluate(context, locals)
      # skip vendor assets
      return data if file.start_with?(Rails.root.join("vendor").to_s)

      TraceurCompiler.compile(data, filename: module_name, source_map: false, modules: "inline")
    end

    def module_name
      Rails.application.assets.paths.find do |path|
        return file[(path.size + 1)..-1] if file.start_with?(path)
      end
    end
  end

  Rails.application.assets.register_postprocessor("application/javascript", TraceurProcessor)

